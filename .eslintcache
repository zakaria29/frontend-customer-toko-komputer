[{"D:\\React\\React JS\\toko-komputer-customer\\src\\index.js":"1","D:\\React\\React JS\\toko-komputer-customer\\src\\App.js":"2","D:\\React\\React JS\\toko-komputer-customer\\src\\reportWebVitals.js":"3","D:\\React\\React JS\\toko-komputer-customer\\src\\pages\\Cart.js":"4","D:\\React\\React JS\\toko-komputer-customer\\src\\pages\\Login.js":"5","D:\\React\\React JS\\toko-komputer-customer\\src\\config.js":"6","D:\\React\\React JS\\toko-komputer-customer\\src\\pages\\Product.js":"7","D:\\React\\React JS\\toko-komputer-customer\\src\\components\\Navbar.js":"8","D:\\React\\React JS\\toko-komputer-customer\\src\\components\\ProductList.js":"9","D:\\React\\React JS\\toko-komputer-customer\\src\\pages\\Transaction.js":"10","D:\\React\\React JS\\toko-komputer-customer\\src\\components\\TransactionList.js":"11"},{"size":634,"mtime":1611715469213,"results":"12","hashOfConfig":"13"},{"size":556,"mtime":1611715803345,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1609670201892,"results":"15","hashOfConfig":"13"},{"size":7285,"mtime":1611731325588,"results":"16","hashOfConfig":"13"},{"size":2755,"mtime":1611715424439,"results":"17","hashOfConfig":"13"},{"size":254,"mtime":1611715035676,"results":"18","hashOfConfig":"13"},{"size":3673,"mtime":1611723321897,"results":"19","hashOfConfig":"13"},{"size":1990,"mtime":1611715304664,"results":"20","hashOfConfig":"13"},{"size":1571,"mtime":1611715637116,"results":"21","hashOfConfig":"13"},{"size":2318,"mtime":1611796332538,"results":"22","hashOfConfig":"13"},{"size":4829,"mtime":1611796273385,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"11dqg3b",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React\\React JS\\toko-komputer-customer\\src\\index.js",[],["49","50"],"D:\\React\\React JS\\toko-komputer-customer\\src\\App.js",[],"D:\\React\\React JS\\toko-komputer-customer\\src\\reportWebVitals.js",[],"D:\\React\\React JS\\toko-komputer-customer\\src\\pages\\Cart.js",["51"],"import React from \"react\"\r\nimport Navbar from \"../components/Navbar\"\r\nimport { base_url } from \"../config\";\r\nimport axios from \"axios\"\r\nclass Cart extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            token: \"\",\r\n            customerID: \"\",\r\n            customerName: \"\",\r\n            cart: [], // untuk menyimpan list cart\r\n            total: 0, // untuk menyimpan data total belanja\r\n        }\r\n\r\n        if(localStorage.getItem(\"token\")){\r\n            this.state.token = localStorage.getItem(\"token\")\r\n        }else{\r\n            window.location = \"/login\"\r\n        }\r\n\r\n    }\r\n\r\n    headerConfig = () => {\r\n        let header = {\r\n            headers: { Authorization: `Bearer ${this.state.token}` }\r\n        }\r\n        return header\r\n    }\r\n\r\n    initCart = () => {\r\n        // memanggil data cart pada localStorage\r\n        let tempCart = []\r\n        if(localStorage.getItem(\"cart\") !== null){\r\n            tempCart = JSON.parse(localStorage.getItem(\"cart\"))\r\n        }\r\n\r\n        if(localStorage.getItem(\"customer\") !== null){\r\n            let customer = JSON.parse(localStorage.getItem(\"customer\"))\r\n            this.setState({\r\n                customerID: customer.customer_id,\r\n                customerName: customer.name\r\n            })\r\n        }\r\n\r\n        // kalkulasi total harga\r\n        let totalHarga = 0;\r\n        tempCart.map(item => {\r\n            totalHarga += (item.price * item.qty)\r\n        })\r\n\r\n        // memasukkan data cart, user, dan total harga pada state\r\n        this.setState({\r\n            cart: tempCart,\r\n            total: totalHarga\r\n        })\r\n    }\r\n\r\n    editItem = selectedItem => {\r\n        let tempCart = []\r\n        if(localStorage.getItem(\"cart\") !== null){\r\n            tempCart = JSON.parse(localStorage.getItem(\"cart\"))\r\n        }\r\n\r\n        let index = tempCart.findIndex(it => it.product_id === selectedItem.product_id)\r\n        let promptJumlah = window.prompt(`Masukkan jumlah ${selectedItem.name} yang beli`,selectedItem.qty)\r\n        tempCart[index].qty = promptJumlah\r\n\r\n        // update localStorage\r\n        localStorage.setItem(\"cart\", JSON.stringify(tempCart))\r\n\r\n        // refersh cart\r\n        this.initCart()\r\n    }\r\n\r\n    dropItem = selectedItem => {\r\n        if (window.confirm(`Apakah anda yakin menghapus ${selectedItem.name} dari cart?`)) {\r\n            let tempCart = []\r\n            if(localStorage.getItem(\"cart\") !== null){\r\n                tempCart = JSON.parse(localStorage.getItem(\"cart\"))\r\n            }\r\n\r\n            let index = tempCart.findIndex(it => it.product_id === selectedItem.product_id)\r\n            tempCart.splice(index, 1)\r\n\r\n            // update localStorage\r\n            localStorage.setItem(\"cart\", JSON.stringify(tempCart))\r\n\r\n            // refersh cart\r\n            this.initCart()\r\n        }\r\n    }\r\n\r\n    checkOut = () => {\r\n        let tempCart = []\r\n        if(localStorage.getItem(\"cart\") !== null){\r\n            tempCart = JSON.parse(localStorage.getItem(\"cart\"))\r\n        }\r\n\r\n        let data = {\r\n            customer_id: this.state.customerID,\r\n            detail_transaksi: JSON.stringify(tempCart)\r\n        }\r\n\r\n        let url = base_url + \"/transaksi\"\r\n        \r\n\r\n        axios.post(url, data, this.headerConfig())\r\n        .then(response => {\r\n            // clear cart\r\n            window.alert(response.data.message)\r\n            localStorage.removeItem(\"cart\")\r\n            window.location = \"/transaction\"\r\n        })\r\n        .catch(error => {\r\n            if (error.response) {\r\n                if(error.response.status) {\r\n                    window.alert(error.response.data.message)\r\n                    this.props.history.push(\"/login\")\r\n                }\r\n            }else{\r\n                console.log(error);\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.initCart()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar />\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"card col-12 mt-2\">\r\n                        <div className=\"card-header bg-primary text-white\">\r\n                            <h4>Cart List</h4>\r\n                        </div>\r\n\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"text-primary\">\r\n                                Customer: { this.state.customerName }\r\n                            </h5>\r\n\r\n                            <table className=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Product</th>\r\n                                        <th>Price</th>\r\n                                        <th>Qty</th>\r\n                                        <th>Total</th>\r\n                                        <th>Option</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    { this.state.cart.map( (item, index) => (\r\n                                        <tr key={index}>\r\n                                            <td>{item.name}</td>\r\n                                            <td>Rp {item.price}</td>\r\n                                            <td>{item.qty}</td>\r\n                                            <td className=\"text-right\">\r\n                                                Rp { item.price * item.qty }\r\n                                            </td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-sm btn-info m-1\"\r\n                                                onClick={() => this.editItem(item)}>\r\n                                                    Edit\r\n                                                </button>\r\n\r\n                                                <button className=\"btn btn-sm btn-danger m-1\"\r\n                                                onClick={() => this.dropItem(item)}>\r\n                                                    Hapus\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ) ) }\r\n                                    <tr>\r\n                                        <td colSpan=\"3\">Total</td>\r\n                                        <td className=\"text-right\">Rp {this.state.total}</td>\r\n                                        <td>\r\n                                            <button className=\"btn btn-sm btn-success btn-block m-1\"\r\n                                            onClick={() => this.checkOut()}\r\n                                            disabled={this.state.cart.length === 0}>\r\n                                                Checkout\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cart;","D:\\React\\React JS\\toko-komputer-customer\\src\\pages\\Login.js",[],"D:\\React\\React JS\\toko-komputer-customer\\src\\config.js",[],"D:\\React\\React JS\\toko-komputer-customer\\src\\pages\\Product.js",[],"D:\\React\\React JS\\toko-komputer-customer\\src\\components\\Navbar.js",["52"],"import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nclass Navbar extends React.Component{\r\n    Logout = () => {\r\n        localStorage.removeItem(\"token\")\r\n        localStorage.removeItem(\"customer\")\r\n        window.location = \"/login\"\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"navbar navbar-expand-lg bg-dark navbar-dark\">\r\n                <a className=\"navbar-brand\">\r\n                    Moklet Computer Store\r\n                </a>\r\n\r\n                {/* show and hide menu */}\r\n                <button className=\"navbar-toggler\" data-toggle=\"collapse\"\r\n                data-target=\"#menu\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                {/* menu */}\r\n                <div id=\"menu\" className=\"navbar-collapse collpase\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                Product\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/cart\" className=\"nav-link\">\r\n                                Cart\r\n                            </Link>\r\n                        </li>\r\n                        \r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/transaction\" className=\"nav-link\">\r\n                                Transactions\r\n                            </Link>\r\n                        </li>\r\n                        \r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" onClick={() => this.Logout()}>\r\n                                Logout\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Navbar;","D:\\React\\React JS\\toko-komputer-customer\\src\\components\\ProductList.js",[],"D:\\React\\React JS\\toko-komputer-customer\\src\\pages\\Transaction.js",[],"D:\\React\\React JS\\toko-komputer-customer\\src\\components\\TransactionList.js",["53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":48,"column":27,"nodeType":"60","messageId":"61","endLine":48,"endColumn":29},{"ruleId":"62","severity":1,"message":"63","line":12,"column":17,"nodeType":"64","endLine":12,"endColumn":45},{"ruleId":"58","severity":1,"message":"59","line":6,"column":25,"nodeType":"60","messageId":"61","endLine":6,"endColumn":27},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]